 #include <stdio.h>

struct Process {
int id, bt, wt, tat, priority;
};


int main() {
int n;
printf("Enter number of processes: ");
 

scanf("%d", &n);


struct Process p[n]; 
int i,j;
// Input process details
for (i = 0; i < n; i++) {
p[i].id = i + 1;
printf("Enter burst time and priority for process %d: ", p[i].id);
scanf("%d %d", &p[i].bt, &p[i].priority);
}


// Sort processes by priority (higher priority first ? smaller number = higher)
for (i = 0; i < n - 1; i++) {
for (j = i + 1; j < n; j++) {
if (p[i].priority > p[j].priority) {
struct Process temp = p[i]; p[i] = p[j];
p[j] = temp;
}
}
}


// Calculate waiting time and turnaround time p[0].wt = 0;
p[0].tat = p[0].bt;


for (i = 1; i < n; i++) {
p[i].wt = p[i - 1].wt + p[i - 1].bt;
p[i].tat = p[i].wt + p[i].bt;
}
 



// Print results printf("\nProcess\tBT\tPriority\tWT\tTAT\n"); 
int totalWT = 0,
totalTAT = 0;
for (i = 0; i < n; i++) {
printf("P%d\t%d\t%d\t\t%d\t%d\n",
p[i].id, p[i].bt, p[i].priority, p[i].wt, p[i].tat); 
totalWT += p[i].wt;
totalTAT += p[i].tat;
}


printf("\nAverage Waiting Time = %.2f", (float) totalWT / n); 
printf("\nAverage Turnaround Time = %.2f\n", (float) totalTAT / n);

return 0;
}
